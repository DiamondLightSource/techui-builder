[project]
name = "techui-builder"
dynamic = ["version"]
description = "A package for building GUIs"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.12",
]
urls = { GitHub = "https://github.com/DiamondLightSource/techui-builder" }
authors = [
    { name = "Oliver Copping", email = "oliver.copping@diamond.ac.uk" },
    { name = "Adedamola Sode", email = "adedamola.sode@diamond.ac.uk" },
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "pyyaml>=6.0.2",
    "phoebusgen>=3.0.0",
    "lxml>=5.4.0",
    "typer>=0.16.0",
]
scripts = { create-gui = "techui_builder.__main__:app" }
optional-dependencies = { dev = [
    "basedpyright>=1.27.1",
    "hatch>=1.14.0",
    "hatch-vcs",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pytest>=8.3.4",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-faulthandler",
    "pytest-forked",
    "pytest-rerunfailures",
    "pytest-timeout",
    "ruff",
    "sphinx",
    "sphinx-autobuild",
    "autodoc-pydantic",
    "sphinxcontrib-mermaid",
    "sphinx-copybutton",
    "sphinx-design",
    "types-mock",
    "types-pyyaml",
] }

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.uv]
default-groups = []

[tool.hatch.version]
source = "vcs"
fallback-version = "0.1.0"
# allows for tags with the format 0.1.0a1
tag-pattern = "(?P<version>([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|c|rc)(0|[1-9][0-9]*))?)"
#version_format = "phoebus_guibuiler.version:format_version"
raw-options = { version_scheme = "only-version", local_scheme = "dirty-tag" }

[tool.hatch.build.hooks.vcs]
version-file = "src/techui_builder/_version.py"
template = '''
# This file is automatically generated by Hatch
# Do not modify this file directly

__version__ = "{version}"
version_tuple = {version_tuple}
'''

[tool.pyright]
typeCheckingMode = "standard"
reportMissingImports = false  # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --strict-markers --doctest-modules
    --doctest-glob="*.rst" --doctest-glob="*.md"
    --ignore=docs/examples
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "docs src tests"
log_format = "%(asctime)s,%(msecs)03d %(levelname)s (%(threadName)s) %(message)s"
log_date_format = "%H:%M:%S"

markers = [
    "motorsim: require the motorsim IOC to be running",
    "adsim: require the ADsim IOC to be running",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
data_file = "/tmp/techui_builder.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

[tool.hatch.envs.default.scripts]
all = [
    "hatch run precommit:precommit",
    "hatch run type-check:type-check",
    "hatch run tests:tests",
    # "hatch run docs:docs"
]
precommit = ["hatch run precommit:precommit"]
type-check = ["hatch run type-check:type-check"]
tests = ["hatch run tests:tests"]
docs = ["hatch run docs:docs"]

[tool.hatch.envs.precommit]
description = "Run pre-commit"
scripts = { precommit = ["pre-commit run  --show-diff-on-failure {args}"] }

[tool.hatch.envs.type-check]
description = "Run type-checking"
scripts = { type-check = ["basedpyright --stats src {args}"] }

[tool.hatch.envs.tests]
description = "Run tests"
scripts = { tests = [
    "pytest --cov=techui_builder --cov-report term --cov-report xml:cov.xml {args}",
] }

[tool.hatch.envs.docs]
description = "Run docs"
scripts = { docs = ["sphinx-{args:build} -EW --keep-going -T docs build/html"] }

[tool.ruff]
src = ["src", "tests", "system_tests"]
line-length = 88
lint.select = [
    "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "SLF", # self - https://docs.astral.sh/ruff/settings/#lintflake8-self
]

[tool.ruff.lint.per-file-ignores]
# By default, private member access is allowed in tests
# See https://github.com/DiamondLightSource/python-copier-template/issues/154
# Remove this line to forbid private member access in tests
"tests/**/*" = ["SLF001"]
# dependencies = ["sphinx-build", "sphinx-autobuild"]
